[
  {
    "rule_id": "ECO-DOCKER-001",
    "tech": "docker",
    "title": "Use multi-stage builds to slim images",
    "severity": "high",
    "category": "quick_win",
    "rationale": "Single-stage images bake dev tooling and artifacts into runtime images, increasing pull time and compute.",
    "detection": "Dockerfile lacks multiple FROM stages; build tools present in final image.",
    "recommendation": "Refactor to multi-stage; copy only runtime artifacts to final stage.",
    "kpi": "image_size_mb",
    "estimate_savings_hint": "-40\u201370% image size",
    "confidence": 0.8,
    "fingerprint_keys": "file_path,line_range,base_image",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-DOCKER-002",
    "tech": "docker",
    "title": "Switch to smaller base image (e.g., alpine, distroless)",
    "severity": "medium",
    "category": "quick_win",
    "rationale": "Large base images waste storage, bandwidth, and cold-start time.",
    "detection": "Base image in FROM is debian/ubuntu where alpine/distroless equivalent exists.",
    "recommendation": "Use minimal base images when compatible; evaluate glibc/musl needs.",
    "kpi": "image_size_mb",
    "estimate_savings_hint": "-20\u201360% image size",
    "confidence": 0.7,
    "fingerprint_keys": "file_path,base_image",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-DOCKER-003",
    "tech": "docker",
    "title": ".dockerignore is missing or too permissive",
    "severity": "medium",
    "category": "quick_win",
    "rationale": "Unnecessary build context increases build time and cache misses.",
    "detection": "No .dockerignore or missing patterns for node_modules/.venv/tests/docs/.git.",
    "recommendation": "Add .dockerignore with common excludes; confirm context reduction.",
    "kpi": "build_context_mb",
    "estimate_savings_hint": "-50\u201395% context",
    "confidence": 0.9,
    "fingerprint_keys": "repo_root,.dockerignore_hash",
    "tags": "Flow,Feedback"
  },
  {
    "rule_id": "ECO-DOCKER-004",
    "tech": "docker",
    "title": "Do not run as root",
    "severity": "low",
    "category": "governance",
    "rationale": "Root containers require stronger isolation and hinder multitenant efficiency.",
    "detection": "USER not set or set to root in final stage.",
    "recommendation": "Create non-root user and set USER; fix file ownerships.",
    "kpi": "non_root_percentage",
    "estimate_savings_hint": "\u226595% workloads non-root",
    "confidence": 0.8,
    "fingerprint_keys": "file_path,line_range",
    "tags": "Governance"
  },
  {
    "rule_id": "ECO-DOCKER-005",
    "tech": "docker",
    "title": "Consolidate RUN layers & enable caching",
    "severity": "low",
    "category": "quick_win",
    "rationale": "Excess layers/cache misses enlarge images and slow builds.",
    "detection": "Many small RUN steps; apt/apk caches not cleaned; no --no-cache.",
    "recommendation": "Combine commands; use --no-cache; prune package caches.",
    "kpi": "build_time_sec",
    "estimate_savings_hint": "-10\u201330% build time",
    "confidence": 0.6,
    "fingerprint_keys": "file_path,line_numbers",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-DOCKER-006",
    "tech": "docker",
    "title": "Pin package versions for reproducible caching",
    "severity": "low",
    "category": "governance",
    "rationale": "Unpinned deps cause cache busts and inconsistent sizes.",
    "detection": "Package managers without pinned versions in Dockerfile.",
    "recommendation": "Pin versions and use lockfiles; periodic controlled bumps.",
    "kpi": "cache_hit_rate",
    "estimate_savings_hint": "\u226585% hit rate",
    "confidence": 0.7,
    "fingerprint_keys": "file_path,package_name",
    "tags": "Feedback"
  },
  {
    "rule_id": "ECO-DOCKER-007",
    "tech": "docker",
    "title": "Minimize layers with COPY --chown and targeted paths",
    "severity": "low",
    "category": "quick_win",
    "rationale": "Copying entire contexts inflates layers and rebuild scope.",
    "detection": "COPY . . patterns without .dockerignore; ownership fixes via separate RUN.",
    "recommendation": "Copy only required directories; use --chown directly in COPY.",
    "kpi": "image_layers",
    "estimate_savings_hint": "-10\u201325% layers",
    "confidence": 0.6,
    "fingerprint_keys": "file_path,line_range",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-DOCKER-008",
    "tech": "docker",
    "title": "Remove dev dependencies from runtime image",
    "severity": "high",
    "category": "quick_win",
    "rationale": "Dev deps add size and attack surface without runtime value.",
    "detection": "Node/Python build includes devDependencies/test tooling in final image.",
    "recommendation": "Use multi-stage or pip install --no-dev; npm ci --omit=dev for prod stage.",
    "kpi": "image_size_mb",
    "estimate_savings_hint": "-20\u201350% size",
    "confidence": 0.8,
    "fingerprint_keys": "file_path,package_manager",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-DOCKER-009",
    "tech": "docker",
    "title": "Use HEALTHCHECK wisely",
    "severity": "low",
    "category": "governance",
    "rationale": "Missing healthchecks harm scheduling efficiency and autoscaling responses.",
    "detection": "No HEALTHCHECK in long-running services.",
    "recommendation": "Add lightweight HEALTHCHECK with sensible intervals/timeouts.",
    "kpi": "mean_time_to_recover",
    "estimate_savings_hint": "-20\u201340% MTTR",
    "confidence": 0.5,
    "fingerprint_keys": "file_path,line_range",
    "tags": "Feedback"
  },
  {
    "rule_id": "ECO-DOCKER-010",
    "tech": "docker",
    "title": "Prefer COPY over ADD (except for archives/URLs)",
    "severity": "low",
    "category": "governance",
    "rationale": "ADD has implicit behaviors that enlarge layers unexpectedly.",
    "detection": "ADD used for local files where COPY suffices.",
    "recommendation": "Replace ADD with COPY; keep ADD for verified tar/URL needs.",
    "kpi": "image_layers",
    "estimate_savings_hint": "-5\u201310% layers",
    "confidence": 0.6,
    "fingerprint_keys": "file_path,line_no",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-K8S-001",
    "tech": "kubernetes",
    "title": "Set CPU & memory requests/limits appropriately",
    "severity": "critical",
    "category": "quick_win",
    "rationale": "Missing/misaligned requests/limits cause overcommit waste or throttling.",
    "detection": "Containers without resources or with requests >> observed usage.",
    "recommendation": "Set requests to p95 usage, limits ~1.5\u20132x; monitor and tune.",
    "kpi": "cpu_request_to_usage_ratio",
    "estimate_savings_hint": "-20\u201350% CPU waste",
    "confidence": 0.85,
    "fingerprint_keys": "kind,name,container",
    "tags": "Flow,Feedback"
  },
  {
    "rule_id": "ECO-K8S-002",
    "tech": "kubernetes",
    "title": "Enable Horizontal Pod Autoscaler (HPA)",
    "severity": "high",
    "category": "deep_work",
    "rationale": "Static replicas keep idle pods during low traffic.",
    "detection": "No HPA present for scalable services.",
    "recommendation": "Add HPA based on CPU/RPS/custom metrics; verify scale-to-zero where safe.",
    "kpi": "avg_replica_hours",
    "estimate_savings_hint": "-20\u201360% replica-hours",
    "confidence": 0.75,
    "fingerprint_keys": "kind,name,namespace",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-K8S-003",
    "tech": "kubernetes",
    "title": "Right-size log verbosity & retention",
    "severity": "medium",
    "category": "governance",
    "rationale": "Excessive logs increase I/O, storage, and costs.",
    "detection": "High log levels in production; long retention with no lifecycle.",
    "recommendation": "Reduce verbosity; add log rotation/retention policies.",
    "kpi": "log_bytes_per_day",
    "estimate_savings_hint": "-30\u201370% logs",
    "confidence": 0.7,
    "fingerprint_keys": "kind,name,container",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-K8S-004",
    "tech": "kubernetes",
    "title": "Use lean base images for sidecars",
    "severity": "low",
    "category": "quick_win",
    "rationale": "Sidecars often run 24/7; heavy images multiply waste.",
    "detection": "Sidecars using generic heavy images.",
    "recommendation": "Switch to minimal images; consolidate sidecars where feasible.",
    "kpi": "image_size_mb",
    "estimate_savings_hint": "-20\u201350% sidecar size",
    "confidence": 0.65,
    "fingerprint_keys": "kind,container,image",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-K8S-005",
    "tech": "kubernetes",
    "title": "Evict unused initContainers and probes tuned",
    "severity": "low",
    "category": "quick_win",
    "rationale": "Overly aggressive probes waste CPU/IO; unused initContainers add time.",
    "detection": "Very short probe intervals/timeouts; initContainers doing one-off tasks repeatedly.",
    "recommendation": "Tune probes; remove redundant initContainers.",
    "kpi": "probe_cpu_seconds",
    "estimate_savings_hint": "-10\u201325% CPU",
    "confidence": 0.55,
    "fingerprint_keys": "kind,name,container",
    "tags": "Feedback"
  },
  {
    "rule_id": "ECO-K8S-006",
    "tech": "kubernetes",
    "title": "Node affinity/taints for efficient bin-packing",
    "severity": "medium",
    "category": "deep_work",
    "rationale": "Poor bin-packing increases active nodes and cluster energy.",
    "detection": "No affinity/taints leading to spread across many nodes.",
    "recommendation": "Define affinity/anti-affinity to improve packing with SLOs.",
    "kpi": "node_hours",
    "estimate_savings_hint": "-10\u201330% node-hours",
    "confidence": 0.6,
    "fingerprint_keys": "namespace,deployment",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-TF-001",
    "tech": "terraform",
    "title": "Use gp3 (or latest) over gp2 for EBS",
    "severity": "medium",
    "category": "quick_win",
    "rationale": "Modern volumes provide better perf per watt and lower cost.",
    "detection": "AWS EBS volumes on gp2.",
    "recommendation": "Switch to gp3 with tuned throughput/IOPS.",
    "kpi": "ebs_gb_month",
    "estimate_savings_hint": "-10\u201320% cost/energy",
    "confidence": 0.8,
    "fingerprint_keys": "resource_type,resource_name,region",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-TF-002",
    "tech": "terraform",
    "title": "Enable S3 lifecycle & intelligent tiering",
    "severity": "medium",
    "category": "quick_win",
    "rationale": "Cold data kept in standard tier wastes energy/cost.",
    "detection": "S3 buckets without lifecycle or tiering.",
    "recommendation": "Add lifecycle rules; enable intelligent tiering where access is unpredictable.",
    "kpi": "s3_standard_gb",
    "estimate_savings_hint": "-30\u201380% std GB",
    "confidence": 0.75,
    "fingerprint_keys": "bucket_name,region",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-TF-003",
    "tech": "terraform",
    "title": "Right-size instance types and autoscaling bounds",
    "severity": "high",
    "category": "deep_work",
    "rationale": "Over-provisioned instances waste compute continuously.",
    "detection": "ASG min/max too high; large instance families with low CPU.",
    "recommendation": "Use utilization metrics to set min/max; try smaller/arm/spot where safe.",
    "kpi": "vCPU_hours",
    "estimate_savings_hint": "-20\u201350% vCPU-hrs",
    "confidence": 0.8,
    "fingerprint_keys": "asg_name,launch_template",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-TF-004",
    "tech": "terraform",
    "title": "Shorten log retention for CloudWatch/AKS/GKE logs",
    "severity": "low",
    "category": "governance",
    "rationale": "Long retention multiplies storage footprint.",
    "detection": "Retention set to default (indefinite).",
    "recommendation": "Set retention to 7\u201330d per compliance; export cold logs to glacier.",
    "kpi": "log_gb_month",
    "estimate_savings_hint": "-20\u201360% log GB",
    "confidence": 0.7,
    "fingerprint_keys": "resource_name,region",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-TF-005",
    "tech": "terraform",
    "title": "Enable autoscaling on managed DBs and storage",
    "severity": "medium",
    "category": "deep_work",
    "rationale": "Static allocations keep headroom always-on.",
    "detection": "RDS/CloudSQL without autoscaling or storage autoscale.",
    "recommendation": "Turn on autoscaling; monitor floor/ceiling.",
    "kpi": "db_cpu_hours",
    "estimate_savings_hint": "-15\u201340% CPU hrs",
    "confidence": 0.65,
    "fingerprint_keys": "db_identifier,engine,region",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-CFN-001",
    "tech": "cloudformation",
    "title": "Right-size Lambda memory & architecture",
    "severity": "medium",
    "category": "quick_win",
    "rationale": "Over-allocating memory wastes cost/energy; x86 vs ARM choice matters.",
    "detection": "Functions with large memory and low duration; x86 where ARM viable.",
    "recommendation": "Tune memory to p95 latency; switch to ARM/Graviton if libs allow.",
    "kpi": "ms_per_invocation",
    "estimate_savings_hint": "-10\u201340% ms",
    "confidence": 0.7,
    "fingerprint_keys": "function_name,arch,region",
    "tags": "Flow,Feedback"
  },
  {
    "rule_id": "ECO-CFN-002",
    "tech": "cloudformation",
    "title": "Set S3 lifecycle transitions",
    "severity": "low",
    "category": "governance",
    "rationale": "Default S3 retention uses standard tier by default.",
    "detection": "Buckets without LifecycleConfiguration.",
    "recommendation": "Add transitions to IA/Glacier; delete incomplete MPU after N days.",
    "kpi": "s3_standard_gb",
    "estimate_savings_hint": "-30\u201380% std GB",
    "confidence": 0.75,
    "fingerprint_keys": "bucket_name,region",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-WEB-001",
    "tech": "web",
    "title": "Bundle size budget exceeded",
    "severity": "high",
    "category": "quick_win",
    "rationale": "Large bundles increase client energy and CDN egress.",
    "detection": "Detected bundle > budget (e.g., >250KB gzip).",
    "recommendation": "Code split, tree-shake, remove heavy libs, defer rarely used routes.",
    "kpi": "bundle_size_kb_gzip",
    "estimate_savings_hint": "-20\u201360% bundle",
    "confidence": 0.85,
    "fingerprint_keys": "file_path,chunk_name",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-WEB-002",
    "tech": "web",
    "title": "Unoptimized images (format/size)",
    "severity": "high",
    "category": "quick_win",
    "rationale": "Oversized raster images dominate transfer and decode energy.",
    "detection": "JPEG/PNG where WebP/AVIF possible; dims >> rendered size.",
    "recommendation": "Use responsive srcset, modern formats, pre-sized images.",
    "kpi": "image_bytes",
    "estimate_savings_hint": "-40\u201390% bytes",
    "confidence": 0.9,
    "fingerprint_keys": "img_src,dimensions",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-WEB-003",
    "tech": "web",
    "title": "Unused dependencies or polyfills",
    "severity": "medium",
    "category": "quick_win",
    "rationale": "Dead weight in node_modules inflates bundles and builds.",
    "detection": "Deps never imported; broad polyfills shipping to modern browsers.",
    "recommendation": "Prune deps; use targeted polyfills and browserslist.",
    "kpi": "bundle_modules_count",
    "estimate_savings_hint": "-10\u201330% modules",
    "confidence": 0.7,
    "fingerprint_keys": "package.json,name",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-WEB-004",
    "tech": "web",
    "title": "Client polling where events/streams suffice",
    "severity": "medium",
    "category": "deep_work",
    "rationale": "Frequent polling wastes radio/CPU cycles.",
    "detection": "Intervals <30s for endpoints supporting SSE/webhooks.",
    "recommendation": "Switch to SSE/WebSockets/webhooks with backoff.",
    "kpi": "poll_requests_per_hour",
    "estimate_savings_hint": "-50\u201395% requests",
    "confidence": 0.75,
    "fingerprint_keys": "url,interval_ms",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-WEB-005",
    "tech": "web",
    "title": "Excessive console/debug in production",
    "severity": "low",
    "category": "governance",
    "rationale": "Console and verbose logging slow pages and leak info.",
    "detection": "console.debug/trace present in prod bundles.",
    "recommendation": "Strip logs during build; guard by env.",
    "kpi": "console_calls_per_page",
    "estimate_savings_hint": "-80\u2013100%",
    "confidence": 0.6,
    "fingerprint_keys": "file_path,line_range",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-WEB-006",
    "tech": "web",
    "title": "No HTTP caching headers / immutability",
    "severity": "medium",
    "category": "quick_win",
    "rationale": "Lack of caching increases repeat transfer energy.",
    "detection": "Static assets served without long-lived cache headers.",
    "recommendation": "Add Cache-Control/ETag; content-hash filenames.",
    "kpi": "repeat_transfer_bytes",
    "estimate_savings_hint": "-40\u201390%",
    "confidence": 0.8,
    "fingerprint_keys": "path,header_set",
    "tags": "Feedback"
  },
  {
    "rule_id": "ECO-PY-001",
    "tech": "python",
    "title": "Inefficient loops / avoid repeated work",
    "severity": "medium",
    "category": "quick_win",
    "rationale": "Python loops with repeated computation inflate CPU time.",
    "detection": "Repeated regex compilation, function calls, or attribute lookups inside loops.",
    "recommendation": "Hoist invariants; precompile regex; use comprehensions/vectorize.",
    "kpi": "cpu_seconds",
    "estimate_savings_hint": "-10\u201340% CPU",
    "confidence": 0.7,
    "fingerprint_keys": "file_path,line_range,pattern",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-PY-002",
    "tech": "python",
    "title": "N+1 DB query patterns",
    "severity": "high",
    "category": "deep_work",
    "rationale": "Chatty ORM access explodes DB calls and CPU/IO.",
    "detection": "ORM calls in loops; missing select_related/prefetch_related.",
    "recommendation": "Batch queries; use joins; ORM eager loading.",
    "kpi": "db_queries_per_req",
    "estimate_savings_hint": "-50\u201395% queries",
    "confidence": 0.8,
    "fingerprint_keys": "file_path,line_range,orm_model",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-PY-003",
    "tech": "python",
    "title": "Inefficient JSON/CSV handling for large data",
    "severity": "medium",
    "category": "deep_work",
    "rationale": "Loading whole files into memory increases time/energy.",
    "detection": "json.load of large files; pandas without chunksize.",
    "recommendation": "Use streaming/chunked reads; ijson; pandas chunksize.",
    "kpi": "io_bytes",
    "estimate_savings_hint": "-30\u201370% CPU/IO",
    "confidence": 0.65,
    "fingerprint_keys": "file_path,line_range",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-PY-004",
    "tech": "python",
    "title": "Over-precision or unnecessary Decimal use",
    "severity": "low",
    "category": "quick_win",
    "rationale": "High precision math is slower and energy-costly when not needed.",
    "detection": "Decimal in hot paths without financial need; float64 where float32 OK.",
    "recommendation": "Use floats/NumPy dtypes appropriate to domain.",
    "kpi": "cpu_seconds",
    "estimate_savings_hint": "-5\u201320% CPU",
    "confidence": 0.5,
    "fingerprint_keys": "file_path,line_range",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-PY-005",
    "tech": "python",
    "title": "Unbounded caching / memory growth",
    "severity": "medium",
    "category": "governance",
    "rationale": "Caches without bounds increase memory/GC and swap risk.",
    "detection": "lru_cache with no maxsize; dict caches never pruned.",
    "recommendation": "Set maxsize; periodic pruning; use TTL caches.",
    "kpi": "peak_rss_mb",
    "estimate_savings_hint": "-10\u201330% RAM",
    "confidence": 0.6,
    "fingerprint_keys": "func_name,decorator_args",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-PY-006",
    "tech": "python",
    "title": "Inefficient logging in hot paths",
    "severity": "low",
    "category": "quick_win",
    "rationale": "String formatting and IO in tight loops adds overhead.",
    "detection": "f-strings evaluated before log level check; many debug logs.",
    "recommendation": "Use lazy logging; guard by level; batch logs.",
    "kpi": "cpu_seconds",
    "estimate_savings_hint": "-5\u201315% CPU",
    "confidence": 0.6,
    "fingerprint_keys": "file_path,line_range",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-CI-001",
    "tech": "ci",
    "title": "Redundant matrix jobs or duplicate workflows",
    "severity": "medium",
    "category": "governance",
    "rationale": "Unnecessary parallel jobs multiply CI compute.",
    "detection": "Matrix includes identical environments; overlapping triggers.",
    "recommendation": "Deduplicate; conditional matrix; path filters.",
    "kpi": "ci_vcpu_minutes",
    "estimate_savings_hint": "-20\u201350% minutes",
    "confidence": 0.75,
    "fingerprint_keys": "workflow_name,job_name",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-CI-002",
    "tech": "ci",
    "title": "Missing dependency caching",
    "severity": "medium",
    "category": "quick_win",
    "rationale": "Cold builds fetch and build deps every run.",
    "detection": "No actions/cache or equivalent; lockfiles ignored.",
    "recommendation": "Add caching keyed by lockfile; cache Docker layers.",
    "kpi": "cache_hit_rate",
    "estimate_savings_hint": "\u226585% hit rate",
    "confidence": 0.85,
    "fingerprint_keys": "workflow_name,cache_key",
    "tags": "Feedback"
  },
  {
    "rule_id": "ECO-CI-003",
    "tech": "ci",
    "title": "Artifact retention too long",
    "severity": "low",
    "category": "governance",
    "rationale": "Long-lived artifacts consume storage.",
    "detection": "Artifacts kept >14 days without need.",
    "recommendation": "Reduce retention; compress artifacts; avoid large artifacts.",
    "kpi": "artifact_gb_month",
    "estimate_savings_hint": "-30\u201380% GB",
    "confidence": 0.7,
    "fingerprint_keys": "workflow_name,artifact_name",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-CI-004",
    "tech": "ci",
    "title": "Run tests selectively (changed paths)",
    "severity": "medium",
    "category": "deep_work",
    "rationale": "Running all tests on every change wastes compute.",
    "detection": "No path-based test selection; no impacted tests.",
    "recommendation": "Adopt test impact analysis or path filters; split smoke vs full.",
    "kpi": "ci_vcpu_minutes",
    "estimate_savings_hint": "-20\u201360% minutes",
    "confidence": 0.65,
    "fingerprint_keys": "workflow_name,paths_filter",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-ASSET-001",
    "tech": "assets",
    "title": "Deduplicate identical images/fonts",
    "severity": "low",
    "category": "quick_win",
    "rationale": "Duplicate assets inflate bundles and storage.",
    "detection": "Hash-colliding assets in repo or build output.",
    "recommendation": "Deduplicate; reference single copy; use asset pipeline.",
    "kpi": "asset_bytes",
    "estimate_savings_hint": "-10\u201330% bytes",
    "confidence": 0.7,
    "fingerprint_keys": "asset_hash,asset_path",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-ASSET-002",
    "tech": "assets",
    "title": "Subsetting & compressing web fonts",
    "severity": "medium",
    "category": "deep_work",
    "rationale": "Full font families add 100s of KB per page.",
    "detection": "Multiple full fonts loaded; no unicode-range subsetting.",
    "recommendation": "Subset to needed glyphs; use WOFF2; preload wisely.",
    "kpi": "font_bytes",
    "estimate_savings_hint": "-40\u201380% bytes",
    "confidence": 0.8,
    "fingerprint_keys": "css_file,font_name",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-ASSET-003",
    "tech": "assets",
    "title": "Video autoplay or high bitrate by default",
    "severity": "medium",
    "category": "governance",
    "rationale": "Autoplay and high bitrate waste client energy/data.",
    "detection": "Autoplay enabled; >1080p on mobile; no adaptive bitrate.",
    "recommendation": "Disable autoplay; use ABR; reduce default resolution.",
    "kpi": "video_bytes",
    "estimate_savings_hint": "-30\u201370% bytes",
    "confidence": 0.7,
    "fingerprint_keys": "html_tag,src,attributes",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-DB-001",
    "tech": "database",
    "title": "Indexes missing on hot queries",
    "severity": "high",
    "category": "deep_work",
    "rationale": "Table scans increase CPU/IO and latency.",
    "detection": "Slow query patterns lacking supporting indexes.",
    "recommendation": "Add composite indexes; verify via EXPLAIN/ANALYZE.",
    "kpi": "cpu_seconds_per_query",
    "estimate_savings_hint": "-30\u201390% CPU",
    "confidence": 0.8,
    "fingerprint_keys": "table_name,query_fingerprint",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-DB-002",
    "tech": "database",
    "title": "Excessive data retention without policy",
    "severity": "medium",
    "category": "governance",
    "rationale": "Old rows and blobs increase storage/backup energy.",
    "detection": "Tables without TTL/archival policy; ever-growing blobs.",
    "recommendation": "Add retention; tier cold data; purge safely.",
    "kpi": "storage_gb_month",
    "estimate_savings_hint": "-20\u201360% GB",
    "confidence": 0.7,
    "fingerprint_keys": "table_name,age_days",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-DB-003",
    "tech": "database",
    "title": "Inefficient serialization (JSON blobs for hot paths)",
    "severity": "low",
    "category": "deep_work",
    "rationale": "JSON blobs force parse/scan vs structured columns.",
    "detection": "Frequent JSON_EXTRACT on hot path fields.",
    "recommendation": "Normalize columns or add generated columns with indexes.",
    "kpi": "cpu_seconds_per_query",
    "estimate_savings_hint": "-10\u201340% CPU",
    "confidence": 0.6,
    "fingerprint_keys": "table_name,column_name",
    "tags": "Flow"
  },
  {
    "rule_id": "ECO-GOV-001",
    "tech": "governance",
    "title": "No baseline/delta tracking enabled",
    "severity": "low",
    "category": "governance",
    "rationale": "Without baselines, improvements aren\u2019t measured or celebrated.",
    "detection": "Missing .eco-audit baseline files.",
    "recommendation": "Capture baseline on first run; compare on PRs and sprints.",
    "kpi": "improvement_rate",
    "estimate_savings_hint": "\u226520% reduction in 60 days",
    "confidence": 0.9,
    "fingerprint_keys": "repo_root,baseline_hash",
    "tags": "Learning"
  },
  {
    "rule_id": "ECO-GOV-002",
    "tech": "governance",
    "title": "Missing playbooks linked from rules",
    "severity": "low",
    "category": "governance",
    "rationale": "Lack of repeatable fixes slows adoption and learning.",
    "detection": "Rules without documented fix steps/playbooks.",
    "recommendation": "Author concise playbooks; link from SARIF help.",
    "kpi": "time_to_fix_days",
    "estimate_savings_hint": "-20\u201340% TTF",
    "confidence": 0.6,
    "fingerprint_keys": "rule_id,playbook_url",
    "tags": "Learning"
  }
]